<Page
    x:Class="Project.Views.BedrijfsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Project.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:Project.ViewModels"
    xmlns:controls="using:Template10.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    mc:Ignorable="d">

    <Page.DataContext>
        <viewModels:RichtingViewModel  x:Name="ViewModel"/>
    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            
            <!-- LOGGED IN GROUP -->
            <VisualStateGroup x:Name="LogInGroup">
                <VisualState x:Name="LoggedIn">
                    <VisualState.StateTriggers>
                        <triggers:EqualsStateTrigger EqualTo="True" Value="{Binding Path=IsLoggedIn}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="btnSave.Visibility" Value="Visible" />
                        <Setter Target="btnEdit.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="LoggedOut">
                    <VisualState.StateTriggers>
                        <triggers:EqualsStateTrigger EqualTo="False" Value="{Binding Path=IsLoggedIn}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="btnSave.Visibility" Value="Collapsed" />
                        <Setter Target="btnEdit.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- EDIT MODE GROUP -->
            <VisualStateGroup x:Name="InEditMode">
                <VisualState x:Name="InEditModeTrue">
                    <VisualState.StateTriggers>
                        <triggers:EqualsStateTrigger EqualTo="True" Value="{Binding Path=IsInEditMode}" />
                        <!--<StateTrigger IsActive="{x:Bind ViewModel.IsLoggedIn}"></StateTrigger>-->
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SPLoggedOut.Visibility" Value="Collapsed" />
                        <Setter Target="SPLoggedIn.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="InEditModeFalse">
                    <VisualState.StateTriggers>
                        <triggers:EqualsStateTrigger EqualTo="False" Value="{Binding Path=IsInEditMode}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SPLoggedOut.Visibility" Value="Visible" />
                        <Setter Target="SPLoggedIn.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <!-- ADAPTIVE GROUP -->
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <controls:PageHeader x:Name="pageHeader"
                             Frame="{x:Bind Frame}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="{x:Bind ViewModel.Richting.Title}" />

        <!--  content  -->
        <ScrollViewer EntranceNavigationTransitionInfo.IsTargetElement="True"
                     
                      RelativePanel.AlignBottomWithPanel="True"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="pageHeader"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <Grid>
                    <Grid.Background>
                        <SolidColorBrush Color="#FF0081C5">
                        </SolidColorBrush>
                    </Grid.Background>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Image x:Name="imgBedrijf" Source="../Assets/bedrijfsmanagement.jpg" MaxHeight="150" RelativePanel.AlignHorizontalCenterWithPanel="True" Grid.Row="0" Grid.ColumnSpan="4"/>
                    <Button Grid.Row="1" Grid.Column="0" Click="gaNaarAccountancy" >
                        <Image x:Name="imgAccount" Stretch="Fill" Source="../Assets/accountancyFiscaliteit_banner.jpg" MaxHeight="100" RelativePanel.AlignHorizontalCenterWithPanel="True"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="1" Click="gaNaarFinance" >
                        <Image x:Name="imgFinance" Stretch="Fill"  Source="../Assets/financieEnVerzekering_banner.jpg" MaxHeight="100" RelativePanel.AlignHorizontalCenterWithPanel="True"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="2" Click="gaNaarKmo" >
                        <Image x:Name="imgKmo"  Stretch="Fill" Source="../Assets/kmoManagement_banner.jpg" MaxHeight="100" RelativePanel.AlignHorizontalCenterWithPanel="True"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="3" Click="gaNaarMarketing" >
                        <Image x:Name="imgMarketing"  Stretch="Fill"  Source="../Assets/marketing_banner.jpg" MaxHeight="100" RelativePanel.AlignHorizontalCenterWithPanel="True"/>
                    </Button>
                </Grid>

                <!-- Stackpen logged out -->
                <StackPanel x:Name="SPLoggedOut" Visibility="Visible" Orientation="Vertical" Padding="8" Margin="16">
                    <TextBlock  Style="{StaticResource HeaderTextBlockStyle}" Text="{x:Bind ViewModel.Richting.Title, Mode=TwoWay}" />
                    <TextBlock  FontSize="15" Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Bind ViewModel.Richting.Description, Mode=TwoWay}" />
                    <Button x:Name="btnEdit"   Content="Edit" Command="{x:Bind ViewModel.EditCommand}"/>
                </StackPanel>
                
                <!-- SP logged in -->
                <StackPanel x:Name="SPLoggedIn" Visibility="Visible" Orientation="Vertical" Padding="8" Margin="16">
                    <TextBox Header="Title: " Text="{x:Bind ViewModel.Richting.Title, Mode=TwoWay}" />
                    <TextBox  Header="Omschrijving: " FontSize="15" Text="{x:Bind ViewModel.Richting.Description, Mode=TwoWay}" Height="450" />
                    <Button x:Name="btnSave"   Content="Save" Command="{x:Bind ViewModel.SaveCommand}"/>
                </StackPanel>
                
            </StackPanel>
        </ScrollViewer>

    </RelativePanel>
</Page>
